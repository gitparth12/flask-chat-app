{\rtf1\ansi\ansicpg1252\cocoartf2708
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fswiss\fcharset0 Helvetica;}
{\colortbl;\red255\green255\blue255;}
{\*\expandedcolortbl;;}
\paperw11900\paperh16840\margl1440\margr1440\vieww35800\viewh19680\viewkind0
\pard\tx720\tx1440\tx2160\tx2880\tx3600\tx4320\tx5040\tx5760\tx6480\tx7200\tx7920\tx8640\pardirnatural\partightenfactor0

\f0\fs24 \cf0 const crypto = require('crypto');\
\
// Encryption function\
function encryptMessage(message, key) \{\
  const iv = crypto.randomBytes(16); // Generate a random initialization vector\
  const cipher = crypto.createCipheriv('aes-256-cbc', key, iv);\
  let encrypted = cipher.update(message, 'utf8', 'base64');\
  encrypted += cipher.final('base64');\
  return `$\{iv.toString('hex')\}:$\{encrypted\}`;\
\}\
\
// Decryption function\
function decryptMessage(encryptedMessage, key) \{\
  const [iv, encrypted] = encryptedMessage.split(':');\
  const decipher = crypto.createDecipheriv('aes-256-cbc', key, Buffer.from(iv, 'hex'));\
  let decrypted = decipher.update(encrypted, 'base64', 'utf8');\
  decrypted += decipher.final('utf8');\
  return decrypted;\
\}\
\
\
\
Example usage:\
\
const key = 'mysecretkey';  // This should be a secure key in production\
\
// Encrypt a message\
const message = 'Hello, world!';\
const encryptedMessage = encryptMessage(message, key);\
console.log('Encrypted message:', encryptedMessage);\
\
// Decrypt the message\
const decryptedMessage = decryptMessage(encryptedMessage, key);\
console.log('Decrypted message:', decryptedMessage);\
}